<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/arapp?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true"/>
        <property name="user" value="root" />
        <property name="password" value="m123" />
        <!--连接池中保留的最大连接数。默认值: 15 -->   
        <property name="maxPoolSize" value="20"/>  
        <!-- 连接池中保留的最小连接数，默认为：3-->  
        <property name="minPoolSize" value="2"/>  
        <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->  
        <property name="initialPoolSize" value="2"/>
    </bean>
    
     <!-- spring和MyBatis整合，不需要mybatis的配置映射文件 -->
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<property name="dataSource" ref="dataSource" />
	    <!-- 配置别名，多个包可以用逗号或分号分隔 -->
	    <property name="typeAliasesPackage" value="com.usc.user.bean" />
	    <!-- 自动扫描mapping.xml文件，**表示迭代查找 good 不用一一配置了 -->
	    <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml" />
	  <property name="configLocation" value="classpath:mybatis-config.xml"></property>
	  </bean>
	  
	  <!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
      <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- basePackage：配置扫描的基准包名，多个包可以用逗号或分号分隔 -->  
        <property name="basePackage" value="com.usc.user.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
      </bean>
	   
    
    
  
	  <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
</beans>
